
if [ $# -le 0 ];then
    echo "error: need device type"
    exit 0
fi

if [ -z $3 ];then
    config_file_path=/tmp/device_info.xml
else
    config_file_path=$3
    if [ ! -d $(dirname $config_file_path) ];then
        echo "error: file path error"
        exit 0
    fi
fi

if [ ! -z $2 ];then
    HV=`echo $2 | cut -b 1-3`
fi
md=`echo "$1"|awk '{print substr($0,12,6)}'`
echo $md
case "$md" in
"0500G0")
	cpu_t="Atheros AR7240"
	wifi_n=1
		wifi0=enable
			wifi0_mode=bg
			wifi0_max_power=27
	eth_n=1
		eth0=enable
	flash_t="Spansion FL128PIF"
	flash_s=16
	mem_t="M13S2561616A"
	mem_s=64
	eth_speed=100
	;;
"0500N0")
	cpu_t="Atheros AR7240"
	wifi_n=1
		wifi0=enable
			wifi0_mode=n
			wifi0_max_power=27
			wifi0_txc=1
	eth_n=1
		eth0=enable
	flash_t="Spansion FL128PIF"
	flash_s=16
	mem_t="M13S2561616A"
	mem_s=64
	eth_speed=1000
	;;
"0100G0")
	echo "AP2400-IFT,0100G00P02"
	cpu_t="Atheros AR7240"
	wifi_n=1
		wifi0=enable
			wifi0_mode=bg
			wifi0_max_power=20
	eth_n=1
		eth0=enable
	flash_t="Spansion FL128PIF"
	flash_s=16
	mem_t="M13S2561616A"
	mem_s=64
	eth_speed=100
	;;
*)
	echo "no such device type"
	exit 0
	;;
esac

echo "<device>" > $config_file_path
echo "    <product_model>${1}</product_model>" >> $config_file_path
echo "    <cpu_type>${cpu_t}</cpu_type>" >> $config_file_path
echo "    <flash_type>${flash_t}</flash_type>" >> $config_file_path
echo "    <flash_size>${flash_s}</flash_size>" >> $config_file_path
echo "    <mem_type>${mem_t}</mem_type>" >> $config_file_path
echo "    <mem_size>${mem_s}</mem_size>" >> $config_file_path
echo "    <wifi_total>" >> $config_file_path
echo "        <count>${wifi_n}</count>" >> $config_file_path
echo "        <wifi_sol>" >> $config_file_path 
for n in `seq $wifi_n`
do
n=$(($n-1))
echo "            <wifi${n}>" >> $config_file_path
eval "value=\$wifi${n}"
echo "                <status>${value}</status>" >> $config_file_path
eval "value=\$wifi${n}_mode"
echo "                <mode>${value}</mode>" >> $config_file_path
eval "value=\$wifi${n}_max_power"
echo "                <max_power>$value</max_power>" >> $config_file_path
limit=0
if [ -f /jffs/tx-offset ];then
	if [ ${n} -eq 0 ];then
		limit=`cat /jffs/tx-offset`
	fi
fi
echo "                <limit>${limit}</limit>" >> $config_file_path
eval "value=\$wifi${n}_mode"
if [ ${value} == "n" ]||[ ${value} == "an" ];then
	eval "value=\$wifi${n}_txc"
	echo "                <txchain>${value}</txchain>" >> $config_file_path
fi
echo "            </wifi$n>" >> $config_file_path
done
echo "        </wifi_sol>" >> $config_file_path
echo "    </wifi_total>" >> $config_file_path
echo "    <if_total>" >> $config_file_path
echo "        <count>${eth_n}</count>" >> $config_file_path
echo "    		<speed>${eth_speed}</speed>" >> $config_file_path
echo "        <if_sol>" >> $config_file_path
for n in `seq $eth_n`
do
n=$(($n-1))
echo "        <if${n}>" >> $config_file_path
eval "value=\$eth${n}"
echo "            <status>${value}</status>" >> $config_file_path
echo "        </if${n}>" >> $config_file_path
done
echo "        </if_sol>" >> $config_file_path
echo "    </if_total>" >> $config_file_path
echo "</device>"  >> $config_file_path
