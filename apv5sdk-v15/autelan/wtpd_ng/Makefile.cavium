OCTEON_ROOT := /home/shark/cavium
ROOTFSDIR := /home/shark/builddir/rootfs
#file name and path declare
PKG := wtpd 
VERSION := 
PKG_NAME := $(PKG)-$(VERSION)
#PKG_BUILD_DIR := $(PKG_NAME)
PKG_BUILD_DIR:=src

CAVIUM_CPPFLAGS ?= -I$(OCTEON_ROOT)/tools/mips64-octeon-linux-gnu/sys-root/usr/include
CAVIUM_LDFLAGS ?= -L$(OCTEON_ROOT)/tools/mips64-octeon-linux-gnu/sys-root/usr/lib64
PKG_INSTALL_DIR := $(shell pwd)/$(PKG_BUILD_DIR)/ipkg-install/$(PKG)

#command replace
CPDIR := sudo cp -r 
CP := sudo cp -fpR
MKDIR := mkdir -p
MV := sudo mv

SSL_DIR := $(ROOTFSDIR)/../source/openssl/src

#configure option
FPIC := -fPIC
TARGET_CROSS ?= mips64-octeon-linux-gnu-
TARGET_CC ?= $(TARGET_CROSS)gcc
TARGET_CFLAGS = -g -O2 -DWITH_OPENSSL -DHAVE_OPENSSL_SSL_H  
EXTRA_CFLAGS = 
TARGET_CPPFLAGS = $(CAVIUM_CPPFLAGS) 
EXTRA_CPPFLAGS = -I$(SSL_DIR)/include
TARGET_LDFLAGS = $(CAVIUM_LDFLAGS)
EXTRA_LDFLAGS = -L$(SSL_DIR) -lcrypto -lssl
GNU_TARGET_NAME ?= mips-linux
DISABLE_NLS ?= --disable-nls 
TARGET_CONFIGURE_OPTS ?= \
  AR=$(TARGET_CROSS)ar \
  AS="$(TARGET_CC) -c $(TARGET_CFLAGS)" \
  LD=$(TARGET_CROSS)ld \
  NM=$(TARGET_CROSS)nm \
  CC="$(TARGET_CC)" \
  GCC="$(TARGET_CC)" \
  CXX=$(TARGET_CROSS)g++ \
  RANLIB=$(TARGET_CROSS)ranlib \
  STRIP=$(TARGET_CROSS)strip \
  OBJCOPY=$(TARGET_CROSS)objcopy \
  OBJDUMP=$(TARGET_CROSS)objdump \
  SIZE=$(TARGET_CROSS)size

CONFIGURE_VARS = \
                $(TARGET_CONFIGURE_OPTS) \
                CFLAGS="$(TARGET_CFLAGS) $(EXTRA_CFLAGS)" \
                CXXFLAGS="$(TARGET_CFLAGS) $(EXTRA_CFLAGS)" \
                CPPFLAGS="$(TARGET_CPPFLAGS) $(EXTRA_CPPFLAGS)" \
                LDFLAGS="$(TARGET_LDFLAGS) $(EXTRA_LDFLAGS)" \
			
CONFIGURE_ARGS = \
                --target=$(GNU_TARGET_NAME) \
                --host=$(GNU_TARGET_NAME) \
                --build=$(GNU_HOST_NAME) \
                --program-prefix="" \
                --program-suffix="" \
                --prefix=/usr \
                --exec-prefix=/usr \
                --bindir=/usr/bin \
                --sbindir=/usr/sbin \
                --libexecdir=/usr/lib \
                --sysconfdir=/etc \
                --datadir=/usr/share \
                --localstatedir=/var \
                --mandir=/usr/man \
                --infodir=/usr/info \
                $(DISABLE_NLS) \
		ac_cv_func_malloc_0_nonnull=yes 

MAKE_FLAGS = \
		$(TARGET_CONFIGURE_OPTS) \
		CROSS="$(TARGET_CROSS)" \
		ARCH="$(ARCH)"
MAKE_VARS = \
		CFLAGS="$(TARGET_CFLAGS) $(EXTRA_CFLAGS)" \
		CPPFLAGS="$(TARGET_CPPFALGS) $(EXTRA_CPPFLAGS)" \
 		CXXFLAGS="$(TARGET_CFALGS) $(EXTAR_CFLAGS)" \
		LDFLAGS="$(TARGET_LDFLAGS) $(EXTRA_LDFLAGS)"
MAKE_DTLS = \
		DTLSCFLAGS="$(EXTRA_CPPFLAGS)" \
		DTLSLDFLAGS="$(EXTRA_LDFLAGS)"

#EXTRA_CFLAGS=-DCAVIUM_PLATFORM -DIPV6 -DIPv6 #when use dtls, use it
EXTRA_CFLAGS=-DCAVIUM_PLATFORM -DIPV6 -DIPv6 -DCW_NO_DTLS
ifeq ($(MODE), 11n)
EXTRA_CFLAGS += -DMODE11N
endif

.PHONY: all
#all: compile 
all: compile install 


.PHONY: compile
compile:
	$(MAKE) -C $(PKG_BUILD_DIR)/wcpss/src/app/wtpd/ EXTRA_CFLAGS="$(EXTRA_CFLAGS)" AR=$(TARGET_CROSS)ar
#	$(MAKE) -C $(PKG_BUILD_DIR)/wcpss/src/app/wtpd/ $(MAKE_DTLS) EXTRA_CFLAGS="$(EXTRA_CFLAGS)" AR=$(TARGET_CROSS)ar #when use dtls, use it


.PHNOY: install
install:
	$(CP) $(PKG_BUILD_DIR)/wcpss/src/app/wtpd/wtpd $(ROOTFSDIR)/sbin/
	$(CP) $(PKG_BUILD_DIR)/wcpss/src/res/root.pem $(ROOTFSDIR)/etc/wlan/
	$(CP) $(PKG_BUILD_DIR)/wcpss/src/res/client.pem $(ROOTFSDIR)/etc/wlan/
	$(CP) $(PKG_BUILD_DIR)/wcpss/src/res/config.wtp $(ROOTFSDIR)/etc/wlan
#	$(CP) $(PKG_BUILD_DIR)/wcpss/src/res/wtp.log.txt $(ROOTFSDIR)/etc/wlan


.PHONY: clean
clean:
	$(MAKE) -C $(PKG_BUILD_DIR) clean
	$(MAKE) -C $(PKG_BUILD_DIR)/../pub clean
