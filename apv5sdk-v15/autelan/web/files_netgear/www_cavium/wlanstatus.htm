#!/usr/bin/haserl
<%in /usr/lib/web/libweb.sh %>
<% session_validate %>
<% response_headers %>
<%
wlan_status()
{
   for vapnum in `seq $NUM_ap` 
   do
   	 local IWCONFIG=/usr/sbin/iwconfig
   	 local xml_wlan_vap=`config_read /config/network/vap$vapnum`
		 local xml_wlan_vap_enable=`config_getoption "$xml_wlan_vap" create`
	   if [ "$xml_wlan_vap" != "" ]; then
				if [ "$xml_wlan_vap_enable" == "yes" ];then
				   local xml_wlan_vap_if=`config_getoption "$xml_wlan_vap" if`
				   local workmode=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null |grep  -i -o 'IEEE 802.11[a,b,g]' | cut -d. -f2 2>/dev/null`
				   local essid=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -i -e 'ESSID:"'|cut -d\" -f2`
				   local apmode=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o  -e 'Mode:[0-9a-zA-Z]\{1,64\}'|cut -d: -f2`
			     local frequency=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o  -e 'Frequency:[0-9]\{1,3\}.[0-9]\{1,3\} GHz'`
			     local channel=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o  -e 'Channel:[0-9]\{1,3\}'`
			     local accesspoint=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep  -i -o 'Access Point: [a-zA-Z0-9:-]\{1,20\}'|awk '{print $3}' 2>/dev/null`
			     local bitrate=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Bit Rate[:=][0-9]\{1,4\} [kM]b/s'|cut -d= -f2|cut -d: -f2 2>/dev/null `
			     local txpower=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Tx-Power[:=][0-9]\{1,2\} dBM'|cut -d: -f2|cut -d= -f2 2>/dev/null`
			     local sensitivity=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Sensitivity=[0-9]\{1,2\}/[0-9]\{1,2\}'|cut -d= -f2 2>/dev/null`
			     local retry=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Retry[:=][0-9a-zA-Z ]\{1,6\}'|cut -d= -f2|cut -d: -f2 2>/dev/null`
			     local rtsthr=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'RTS thr[:=][0-9a-zA-Z ]\{1,6\}'|cut -d= -f2|cut -d: -f2 2>/dev/null`
			     local fragmentthr=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Fragment thr[:=][0-9a-zA-Z ]\{1,6\}'|cut -d= -f2|cut -d: -f2 2>/dev/null`
			     local Encryptionkey=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i 'Encryption key:[0-9a-zA-Z-]\{1,50\}'|cut -d: -f2 2>/dev/null`
			     local securitymode=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Security mode:[a-z]\{1,6\}'|cut -d: -f2 2>/dev/null`
			     local powermanagement=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Power Management:[0-9a-z]\{1,6\}'|cut -d: -f2 2>/dev/null`
			     local linkquality=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Link Quality=[0-9/]\{1,7\}'|cut -d= -f2 2>/dev/null`
			     local Signallevel=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Signal level=[0-9-]\{1,7\} dBM'|cut -d= -f2 2>/dev/null`
			     local Noiselevel=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Noise level=[0-9-]\{1,7\} dBM'|cut -d= -f2 2>/dev/null`
			     local Rxinvalidnwid=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Rx invalid nwid:[0-9]\{1,8\}'|cut -d: -f2 2>/dev/null`
			     local Rxinvalidcrypt=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Rx invalid crypt:[0-9]\{1,8\}'|cut -d: -f2 2>/dev/null`
			     local Rxinvalidfrag=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Rx invalid frag:[0-9]\{1,8\}'|cut -d: -f2 2>/dev/null`
			     local txexcessiv=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Tx excessive retries:[0-9]\{1,8\}'|cut -d: -f2 2>/dev/null`
			     local invalidmisc=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Invalid misc:[0-9]\{1,8\}'|cut -d: -f2 2>/dev/null`
			     local missedbeacon=`$IWCONFIG $xml_wlan_vap_if 2>/dev/null|grep -o -i -e 'Missed beacon:[0-9]\{1,8\}'|cut -d: -f2 2>/dev/null`
					 echo "vap$vapnum	IEEE 802.$workmode  ESSID:\"$essid\""
					 echo "	Mode:$apmode  $frequency$channel  Access Point:$accesspoint"
					 echo "	Bit Rate:$bitrate  Tx-Power:$txpower  Sensitivity:$sensitivity"
					 echo "	Retry:$retry  RTS thr:$rtsthr  Fragment thr:$fragmentthr"
					 echo "	Encryption key:$Encryptionkey  $securitymode"
					 echo "	Power Management:$powermanagement"
					 echo "	Link Quality:$linkquality  Signal level:$Signallevel  Noise level:$Noiselevel"
					 echo "	Rx invalid nwid:$Rxinvalidnwid  Rx invalid crypt:$Rxinvalidcrypt  Rx invalid frag:$Rxinvalidfrag"
					 echo "	Tx excessive retries:$txexcessiv  Invalid misc:$invalidmisc  Missed beacon:$missedbeacon"
					 echo ""
				fi
	   fi
   done
}


xml_session=`config_read /config/session`
xml_session_lang=`config_getoption "$xml_session" language`
%>
<html>
<head>
<%in page_title.htm %>
<link href="image/style.css" rel="stylesheet" type="text/css">
<% include_js status_info.js %>
<script language="JavaScript" src="util.js" type="text/javascript"></script>
<script language="javascript">
	var flag="<%= $xml_session_lang %>";
	init_mmenu(flag);
	init_stamenu(flag);
	init_wlansta(flag);
</script>
</head>
<body>
<%in page_header.htm %>
<%in menu_status2.htm %>
<div align="center">
<table bgcolor="#f4f9fd" border="0"  cellpadding="0" cellspacing="0" width="774" >
<tr>
			<td  height="25">
			</td>
</tr>

<tr>
<td align="center"  bordercolor="#f4f9fd">
<form method="post" action="login.cgi">
<div align="center">
<table bgcolor="#ffffff" align="center"  bordercolor="#90b5dd"  border="1" cellpadding="0" cellspacing="0" width="650">
						<tr>
						<td width="100%" align="left" colspan="2" height="22" bgcolor="#d9d9d9" bordercolor="#d9d9d9"><b><script language="javascript">replace(wlansta_name)</script></b></td>
						</tr>
						
						<tr>
						<td colspan="2" height="10">
						</td>
						</tr>
						
						<tr>
						<td width="100" bordercolor="#ffffff"></td>
						<td width="550" bordercolor="#ffffff"><pre><% wlan_status %></pre></td>
						</tr>
						
						<tr>
						<td colspan="2" height="10">
						</td>
						</tr>
</table>
<table  align="center"  border="0" cellpadding="0" cellspacing="0" width="650">	
			<tr>
								<td colspan="2" height="20">
								</td>
			</tr>
			
</table>
</div>
</form>
</td>
</tr>

<tr>
			<td  height="25">
			</td>
</tr>
</table>
</div>
<%in page_footer.htm %>
</body>
</html>

