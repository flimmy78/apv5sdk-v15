/**********************************************************************************
* Copyright (c) 2008-2011  Beijing Autelan Technology Co. Ltd.
* All rights reserved.
*
* filename: accessAp.h
* description:  implementation for the header file of accessAp.c
* 
*
* 
************************************************************************************/

/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.old-api.conf 14476 2006-04-18 17:36:51Z hardaker $
 */
#ifndef ACCESSAP_H
#define ACCESSAP_H


#include "../ieee802dot11.h"

#define SNMP_STR_LEN      128

#define GL_UID_LEN        IFINDEX_LEN
#define AC_UID_LEN        IFINDEX_LEN  
#define AS_UID_LEN        IFINDEX_LEN
#define CF_UID_LEN        IFINDEX_LEN
#define AT_UID_LEN        IFINDEX_LEN

#define AP_FILTER_CONFIG_MAC_INDEX_LEN    4
#define LF_UID_LEN       IFINDEX_LEN + AP_FILTER_CONFIG_MAC_INDEX_LEN


static long wepCurrentKey;
static long haveWepCurrentKey;
static struct wepTbl_data  wep[4];




/****************************************************************************
*                          apListFilterTable                            *
****************************************************************************/

static struct Lf_Tbl_data {

  char  UID        [ LF_UID_LEN + 1 ];
  char  ifName     [ IFNAME_LEN + 1 ];

  long  ifIndex; 
  long  apListFilterMacIndex;

  char  apListFilterMacValue    [SNMP_STR_LEN + 1];
  long  haveApListFilterMacValue;

} nLf, *lf = &nLf;

static avList_t lfList;


static struct Cf_Tbl_data {

   char  UID        [ CF_UID_LEN + 1 ];               // unique ID
   char  ifName     [ IFNAME_LEN + 1 ];               // ifName of card

   long  ifIndex; 
   
   char  apUseFilterMacValue   [ SNMP_STR_LEN + 1 ];
   char  apModeFilterMacValue  [ SNMP_STR_LEN + 1 ];
   char  apAddFilterMacValue   [ SNMP_STR_LEN + 1 ];
   char  apDelFilterMacValue   [ SNMP_STR_LEN + 1 ];

   long haveApUseFilterMacValue  ;
   long haveApModeFilterMacValue ;
   long haveApAddFilterMacValue ;
   long haveApDelFilterMacValue ;
   
} nCf,*cf = &nCf;

static avList_t cfList;



static struct Qs_Tbl_data {

   char  UID        [ CF_UID_LEN + 1 ];               // unique ID
   char  ifName     [ IFNAME_LEN + 1 ];               // ifName of card

   long  ifIndex; 
   
   long   QosTrafficClass ;
   long   QosChooseApStation;
   long   QosAIFS;
   long   QosCWmin;
   long   QosCWmax;
   long   QosTXOPLim;

   
   long haveQosTrafficClass ;
   long haveQosChooseApStation;
   long haveQosAIFS;
   long haveQosCWmin;
   long haveQosCWmax;
   long haveQosTXOPLim;
   
} nQs,*qs = &nQs;

static avList_t  qsList;


static struct Qc_Tbl_data {

   char  UID        [ CF_UID_LEN + 1 ];               // unique ID
   char  ifName     [ IFNAME_LEN + 1 ];               // ifName of card

   long  ifIndex; 
   
   long   QosEnabled ;
   long   QosBW;
   long   QoSResPercent;
   long   QossharedBW;
   long   QossharedBWPercent;
   char   SchedAlgName[SNMP_STR_LEN];
   long   ResPolicyEnabled;
   char   ResPolicyName[SNMP_STR_LEN];

   
   long   BackgroundSvcAvgSpeed;
   long   BackgroundSvcMaxBurst;
   long   BackgroundSvcPriority;
   long   BackgroundSvcResPriority;

   
   long   BestEffortSvcAvgSpeed;
   long   BestEffortSvcMaxBurst;
   long   BestEffortSvcPriority;
   long   BestEffortSvcResPriority;
   
   long   VoiceSvcAvgSpeed;
   long   VoiceSvcMaxBurst;
   long   VoiceSvcPriority;
   long   VoiceSvcResPriority;
   
   long   VideoSvcAvgSpeed;
   long   VideoSvcMaxBurst;
   long   VideoSvcPriority;
   long   VideoSvcResPriority;
   
   long   BgMaxSvcCnt;
   long   BgSvcBW;
   long   BgSvcBWPercent;
   long   BgIsUseWREDAlg;
   long   BgIsUseTrafficShaping;
   
   long   BeMaxSvcCnt;
   long   BeSvcBW;
   long   BeSvcBWPercent;
   long   BeIsUseWREDAlg;
   long   BeIsUseTrafficShaping;

   
   long   VoiceMaxSvcCnt;
   long   VoiceSvcBW ;
   long   VoiceSvcBWPercent;
   long   VoiceIsUseStreamBasedQueue ;
   long   VoiceStreamMaxQueueLen;
   long   VoiceStreamAvgSpeed ;
   long   VoiceStreamMaxBurst ;
   long   VoiceIsUseWREDAlg ;
   long   VoiceIsUseTrafficShaping ;
   
   long   VideoMaxSvcCnt ;
   long   VideoeSvcBW ;
   long   VideoSvcBWPercent ;
   long   VideoIsUseStreamBasedQueue ;
   long   VideoStreamMaxQueueLen ;
   long   VideoStreamAvgSpeed ;
   long   VideoStreamMaxBurst ;
   long   VideoIsUseWREDAlg ;
   long   VideoIsUseTrafficShaping ;
   
   long   haveQosEnabled ;
   long   haveQosBW;
   long   haveQoSResPercent;
   long   haveQossharedBW;
   long   haveQossharedBWPercent;
   long   haveSchedAlgName;
   long   haveResPolicyEnabled;
   long   haveResPolicyName;

   
   long   haveBackgroundSvcAvgSpeed;
   long   haveBackgroundSvcMaxBurst;
   long   haveBackgroundSvcPriority;
   long   haveBackgroundSvcResPriority;

   
   long   haveBestEffortSvcAvgSpeed;
   long   haveBestEffortSvcMaxBurst;
   long   haveBestEffortSvcPriority;
   long   haveBestEffortSvcResPriority;
   
   long   haveVoiceSvcAvgSpeed;
   long   haveVoiceSvcMaxBurst;
   long   haveVoiceSvcPriority;
   long   haveVoiceSvcResPriority;
   
   long   haveVideoSvcAvgSpeed;
   long   haveVideoSvcMaxBurst;
   long   haveVideoSvcPriority;
   long   haveVideoSvcResPriority;
   
   long   haveBgMaxSvcCnt;
   long   haveBgSvcBW;
   long   haveBgSvcBWPercent;
   long   haveBgIsUseWREDAlg;
   long   haveBgIsUseTrafficShaping;
   
   long   haveBeMaxSvcCnt;
   long   haveBeSvcBW;
   long   haveBeSvcBWPercent;
   long   haveBeIsUseWREDAlg;
   long   haveBeIsUseTrafficShaping;

   
   long   haveVoiceMaxSvcCnt;
   long   haveVoiceSvcBW ;
   long   haveVoiceSvcBWPercent;
   long   haveVoiceIsUseStreamBasedQueue ;
   long   haveVoiceStreamMaxQueueLen;
   long   haveVoiceStreamAvgSpeed ;
   long   haveVoiceStreamMaxBurst ;
   long   haveVoiceIsUseWREDAlg ;
   long   haveVoiceIsUseTrafficShaping ;
   
   long   haveVideoMaxSvcCnt ;
   long   haveVideoeSvcBW ;
   long   haveVideoSvcBWPercent ;
   long   haveVideoIsUseStreamBasedQueue ;
   long   haveVideoStreamMaxQueueLen ;
   long   haveVideoStreamAvgSpeed ;
   long   haveVideoStreamMaxBurst ;
   long   haveVideoIsUseWREDAlg ;
   long   haveVideoIsUseTrafficShaping ;
   

   
} nQc,*qc = &nQc;

static avList_t  qcList;




/* function declarations */
void init_accessAp(void);
FindVarMethod var_accessAp;
FindVarMethod var_apListFilterMacTable;
FindVarMethod var_apFilterConfigTable;
FindVarMethod var_apWmmQosRadioTable;
FindVarMethod var_apQosBasicConfigTable;
    WriteMethod write_apUseFilterMacValue;
    WriteMethod write_apModeFilterMacValue;
    WriteMethod write_apAddFilterMacValue;
    WriteMethod write_apDelFilterMacValue;
    WriteMethod write_QosTrafficClass;
    WriteMethod write_QosChooseApStation;
    WriteMethod write_QosAIFS;
    WriteMethod write_QosCWmin;
    WriteMethod write_QosCWmax;
    WriteMethod write_QosTXOPLim;
    WriteMethod write_QosEnabled;
    WriteMethod write_QosBW;
    WriteMethod write_QoSResPercent;
    WriteMethod write_QossharedBW;
    WriteMethod write_QossharedBWPercent;
    WriteMethod write_SchedAlgName;
    WriteMethod write_ResPolicyEnabled;
    WriteMethod write_ResPolicyName;
    WriteMethod write_BackgroundSvcAvgSpeed;
    WriteMethod write_BackgroundSvcMaxBurst;
    WriteMethod write_BackgroundSvcPriority;
    WriteMethod write_BackgroundSvcResPriority;
    WriteMethod write_BestEffortSvcAvgSpeed;
    WriteMethod write_BestEffortSvcMaxBurst;
    WriteMethod write_BestEffortSvcPriority;
    WriteMethod write_BestEffortSvcResPriority;
    WriteMethod write_VoiceSvcAvgSpeed;
    WriteMethod write_VoiceSvcMaxBurst;
    WriteMethod write_VoiceSvcPriority;
    WriteMethod write_VoiceSvcResPriority;
    WriteMethod write_VideoSvcAvgSpeed;
    WriteMethod write_VideoSvcMaxBurst;
    WriteMethod write_VideoSvcPriority;
    WriteMethod write_VideoSvcResPriority;
    WriteMethod write_BgMaxSvcCnt;
    WriteMethod write_BgSvcBW;
    WriteMethod write_BgSvcBWPercent;
    WriteMethod write_BgIsUseWREDAlg;
    WriteMethod write_BgIsUseTrafficShaping;
    WriteMethod write_BeMaxSvcCnt;
    WriteMethod write_BeSvcBW;
    WriteMethod write_BeSvcBWPercent;
    WriteMethod write_BeIsUseWREDAlg;
    WriteMethod write_BeIsUseTrafficShaping;
    WriteMethod write_VoiceMaxSvcCnt;
    WriteMethod write_VoiceSvcBW;
    WriteMethod write_VoiceSvcBWPercent;
    WriteMethod write_VoiceIsUseStreamBasedQueue;
    WriteMethod write_VoiceStreamMaxQueueLen;
    WriteMethod write_VoiceStreamAvgSpeed;
    WriteMethod write_VoiceStreamMaxBurst;
    WriteMethod write_VoiceIsUseWREDAlg;
    WriteMethod write_VoiceIsUseTrafficShaping;
    WriteMethod write_VideoMaxSvcCnt;
    WriteMethod write_VideoeSvcBW;
    WriteMethod write_VideoSvcBWPercent;
    WriteMethod write_VideoIsUseStreamBasedQueue;
    WriteMethod write_VideoStreamMaxQueueLen;
    WriteMethod write_VideoStreamAvgSpeed;
    WriteMethod write_VideoStreamMaxBurst;
    WriteMethod write_VideoIsUseWREDAlg;
    WriteMethod write_VideoIsUseTrafficShaping;

#endif /* ACCESSAP_H */
