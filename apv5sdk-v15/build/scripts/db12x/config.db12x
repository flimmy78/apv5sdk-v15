# Set the toolchain path
export TOOLCHAIN=gcc-4.3.3
export TOOLPREFIX=mips-linux-uclibc-
export TOOLARCH=build_mips/staging_dir/usr
export UBOOT_GCC_4_3_3_EXTRA_CFLAGS=-fPIC

export KERNEL=mips-linux-2.6.31
export KERNELVER=2.6.31
export KERNELTARGET=vmlinux.bin
export COMPRESSKERNEL=y
export KERNELARCH=mips

ifeq ($(AQ_TYPE),XJ9344)
export TARGETFSSIZE=0xe00000
endif
ifeq ($(AQ_TYPE),XH9344)
export TARGETFSSIZE=0xd00000
endif
ifeq ($(OS_TYPE),SINGLE_OS)
export TARGETFSSIZE=0xe10000
else
ifeq ($(OS_TYPE),AE1000_OS)
export TARGETFSSIZE=0x640000
else
ifeq ($(OS_TYPE),DOUBLE_OS)
#export TARGETFSSIZE=0x680000
export TARGETFSSIZE=0x6b0000
endif
endif
endif
ifeq ($(BOOT_FROM_NAND),1)
# should be multiple of 128k
#export TARGETFSSIZE=3276800
else
#export TARGETFSSIZE=2818048
endif
export CONFIG_MIPS_74K_KERNEL_OPTIMIZATION=1
export CONFIG_EMULATION=1

ifeq ($(BUILD_CONFIG),_ap123)
export COMPRESSED_UBOOT=1
export FLASH_SIZE=16
#export TARGETFSSIZE=3080192
#gengzj added for AQ2000_X cannot insmod parameter  
#export BUILD_OPTIMIZED=y
#gengzj added end
endif

ifeq ($(BUILD_CONFIG),_ap123_hwaccel)
export COMPRESSED_UBOOT=1
export FLASH_SIZE=4
#export TARGETFSSIZE=3080192
export BUILD_OPTIMIZED=y
endif

ifeq ($(BUILD_CONFIG),_powercloud)
#export TARGETFSSIZE=3014656
endif

export BUSYBOX=busybox-1.01
export WIRELESSTOOLS=wireless_tools.29
export WIRELESSTOOLSLIB=libiw.so.29

export BUILD_WPA2=y

ifeq ($(USE_GCC_4_5_1), y)
export TOOLCHAIN=gcc-4.5.1
endif

#DEFINE AH_CAL_IN_FLASH_PCI to indicate CALDATA is read from flash thr' PCI bus.
#DEFINE AH_CAL_IN_FLASH_AHB to indicate CALDATA is read from flash thr' AHB bus
#DO NOT DEFINE AH_CAL_IN_FLASH if bus type is dual.

ifeq ($(BUILD_CONFIG),_ap123)
export BUS=AHB
export AH_CAL_IN_FLASH=1
export AH_CAL_LOCATIONS=0xbfff0000
export AH_CAL_RADIOS=1

export AP_TYPE=single
export JUMPSTART_GPIO=21
export ATH_SUPPORT_DFS=0
export AP_USB_LED_GPIO=11
export AH_SUPPORT_KITE_ANY=0
export AH_SUPPORT_KITE_10=0
export AH_SUPPORT_KITE_12=0
export AH_SUPPORT_KIWI_10=0
export AH_SUPPORT_KIWI_ANY=0
export AH_SUPPORT_KIWI_11=0
export ATH_NO_5G_SUPPORT=1
export ATH_SUPPORT_DFS=0
export ATH_GMAC_TXQUEUELEN=900
else
export JUMPSTART_GPIO=16
export AH_SUPPORT_KITE_ANY=1
export AH_SUPPORT_KITE_10=1
export AH_SUPPORT_KITE_12=1
export AH_SUPPORT_KIWI_10=1
export AH_SUPPORT_KIWI_ANY=1
export AH_SUPPORT_KIWI_11=1
export ATH_SUPPORT_DFS=1
export BUS=dual
#export BUS=AHB
export AP_TYPE=dual
#export AP_TYPE=single
#modified by chenming
ifeq ($(AQ_TYPE),XJ9344)
export AH_CAL_IN_FLASH_PCI=1
export AH_CAL_RADIOS_PCI=1
else
export AH_CAL_IN_FLASH_PCI=1
export AH_CAL_RADIOS_PCI=1
endif
#ended by chenming
export AH_CAL_LOCATIONS_PCI=0xbfff4000
export AH_CAL_IN_FLASH_AHB=1
export AH_CAL_RADIOS_AHB=1
export AH_CAL_LOCATIONS_AHB=0xbfff0000
export ATH_SUPPORT_DFS=1
export AP_USB_LED_GPIO=11
endif
export MADWIFITARGET=mipsisa32-be-elf
export FUSIONTARGET=mipsisa32-be-elf
export TARGETARCH=mipsisa32-be-elf

ifeq ($(BUILD_CONFIG),_mi124)
#To build hostapd 0.8.0 version
export BUILD_ATHR_HOSTAP=1
endif

# Ethernet defines

export ATH_GMAC_AR934x=1

ifeq ($(BUILD_CONFIG),_ap123)
export ATH_PHY_SWAP=1
endif
ifeq ($(ENTR),7)
export ATH_PHY_SWAP=1
endif

export ATH_GMAC_RX_TASKLET=1
export ATH_GMAC_RX_PKT_CNT=100
export ATH_GMAC_DESC_SRAM=0

export ATH_GMAC1_RXFCTL=1
export ATH_GMAC1_TXFCTL=1

export ATH_GMAC0_RXFCTL=1
export ATH_GMAC0_TXFCTL=1

ifeq ($(BUILD_CONFIG),_ap123)
export ATH_GMAC0_TX_CNT=40
export ATH_GMAC1_TX_CNT=40
else
export ATH_GMAC0_TX_CNT=128
export ATH_GMAC1_TX_CNT=128
endif

export ATH_GMAC0_RX_CNT=128
export ATH_GMAC1_RX_CNT=128

export ATH_GMAC_HW_QOS=0

export ATH_GMAC_GE0_IS_CONNECTED=1
export ATH_GMAC_GE1_IS_CONNECTED=1

export ATH_GMAC_LEN_PER_TX_DS=1536
export ATH_GMAC_LOCATION=0xbfff0000

export ATH_GMAC0_RGMII=0
export ATH_GMAC0_GMII=0
export ATH_GMAC0_MII=0

export ATH_GMAC1_RGMII=0
export ATH_GMAC1_GMII=0
export ATH_GMAC1_MII=0

export ATH_SWITCH_ONLY_MODE=0
export ETH_CONFIG=_s27

ifeq ($(ETH_CONFIG2),_s17)
export ATH_GMAC_SUPPORT_DUAL_PHY=1
export ETH_CONFIG2=_s17
endif

ifneq ($(ETH_CONFIG),_s27)
export BUILD_EXT=$(ETH_CONFIG)$(ETH_CONFIG2)
#wangyu add these lines for AQ2000X upgrade_tar_build
else
export BUILD_EXT=$(ETH_CONFIG)
#wangyu add these lines for AQ2000X upgrade_tar_build
endif

# For S17 H/W Accelerator
ifeq ($(ETH_CONFIG),_s17_hwaccel)
export BUILD_CONFIG=_routing
endif

# For db12x S27 H/W Accelerator
ifeq ($(BUILD_CONFIG),_hwaccel)
export ATH_GMAC_HW_ACL=1
export ATH_GMAC_HW_NAT=1
endif

# For ap123 S27 H/W Accelerator
ifeq ($(BUILD_CONFIG),_ap123_hwaccel)
export ATH_GMAC_HW_ACL=1
export ATH_GMAC_HW_NAT=1
endif

export BUILD_UMAC=1

# Set Phy Err Diagnostics (Radar detection) to be enabled for AP builds
export ATH_CAP_PHYERR_DIAG=1

export AR5416_G_MODE=1
export AR9100=0
export AR7240_EMU=1
export AH_DEBUG=0

export AH_SUPPORT_AR5210=0
export AH_SUPPORT_AR5212=0
export AH_SUPPORT_5111=0
export AH_SUPPORT_5112=0
export AH_SUPPORT_2413=0
export AH_SUPPORT_5111=0
export AH_SUPPORT_5112=0
export AH_SUPPORT_2413=0
export AH_SUPPORT_5413=0
export AH_SUPPORT_2316=0
export AH_SUPPORT_2317=0
export AH_SUPPORT_2425=0
export AH_SUPPORT_SOWL=0
export AH_SUPPORT_AR5416=1
#export AR9300_EMULATION=1
#export AR9300_EMULATION_BB=1
export AH_SUPPORT_K2=0
export AH_SUPPORT_EEPROM_AR9287=1
#yanggs changes this value 1 -> 0 for vlan wds 2011-11-25
export ATH_SUPPORT_VLAN=0

export ATH_CHAINMASK_SELECT=0
ifeq ($(BUILD_CONFIG),_ap123)
export ATH_RXBUF=128
export ATH_TXBUF=256
else
export ATH_RXBUF=512
export ATH_TXBUF=512
endif
export ATH_CAP_AMSDU=1
export IEEE80211_MCAST_ENHANCEMENT=1
export ATH_RB=0
export AR5416_G_MODE=1
export AH_SUPPORT_HOWL=0
export AH_SUPPORT_OWL=1
export AR5416_INT_MITIGATION=0
export ATH_SUPPORT_IQUE=1
export ATH_SUPPORT_GREEN_AP=1
export ATH_SUPPORT_DYN_TX_CHAINMASK=1
export AH_DESC_NOPACK=1
export ATH_SUPPORT_PAPRD=1
#export ATH_TRAFFIC_FAST_RECOVER=1
export ATH_TRAFFIC_FAST_RECOVER=0

ifeq ($(BUILD_WPA2),y)
export ATH_WPS_IE=1
else
export ATH_WPS_IE=0
endif

ifeq ($(BUILD_SAMBA),y)

export SAMBA_MIPS_74K_CFLAGS=-funit-at-a-time -Os -pipe -march=74kc -mtune=74kc

#Populate the utilities to be removed

sbin_list1=sbin/802* sbin/apst* sbin/ath* sbin/ifr* sbin/iwe*
sbin_list2=sbin/iwsp* sbin/iwli* sbin/radar* sbin/iwge* sbin/pktl*
samba_list=usr/local/bin/* usr/local/sbin/nmb* usr/local/sbin/smb*nt

export INSTALL_BLACKLIST="usr/bin/gdb* $(sbin_list1) $(sbin_list2) $(samba_list)"

endif


#export ATH_SST_FLASH=y
#export EXTRAVERSION=-9.2.0.39.3
#export ATH_SINGLE_CFG=1
export ATH_EXT_AP=1

export ATH_SUPPORT_QUICK_KICKOUT=1
export ATH_SUPPORT_TxBF=1

#export ATH_LOW_POWER_ENABLE=1

export CONFIG_I2S=1

ifeq ($(CONFIG_I2S),1)
export ATH_WASP_I2S=1
endif


#Remove the example files in apps/wpa2 directory
export BUILD_WPA2_NO_EXAMPLES=y

export JUMPSTART_GPIO=16

#export ATH_SUPPORT_SPECTRAL=1
export ATH_SUPPORT_WAPI=1

#wangyu add 2011-05-23
ifeq ($(BOARD_TYPE),db12x)
export BOARD_TYPE=db12x
export PC018=1
endif
#wangyu add end
# dengpanhong add begin
ifeq ($(AQ_TYPE),AQ2000_X)
export AQ_TYPE=AQ2000_X
export AQ2000_X=1
endif
# dengpanhong add end

#wangyu add 2012-03-28
ifeq ($(AQ_TYPE),XJ9344)
export AQ_TYPE=XJ9344
export XJ9344=1
endif

ifeq ($(AQ_TYPE),XH9344)
export AQ_TYPE=XH9344
export XH9344=1
endif
#wangyu add end
#zhaoyang add for dusi check
export ATH_HW_TXQ_STUCK_WAR=1
#zhaoyang add end   
#zhaoyang add for CL101673.fix.patch for dusi
#turn off ap-only code

#export UMAC_SUPPORT_APONLY=0

 

 

# S/W retry mechanism (apart from H/W retries) +

# TID queue pause/unpause and ps-poll handling in LMAC

#

# NOTE: Currently this is not supported with UMAC_SUPPORT_APONLY feature

#

#export ATH_SWRETRY=1
#zhaoyang add end 

#Added by duanmingzhe for AUTELAN_SOLUTION2
export AUTELAN_SOLUTION2=1
#END

